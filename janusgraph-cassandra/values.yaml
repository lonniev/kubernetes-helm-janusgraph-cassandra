image:
  repository: janusgraph/janusgraph
  tag: 0.5.3
  pullPolicy: IfNotPresent

replicaCount: 1

## set your additional container-specific resource requests here
customContainerResources: {}

## see https://github.com/JanusGraph/janusgraph-docker/blob/master/README.md#properties-template
janusPropsTemplate: cql

## set your additional container-specific environment vars here
customContainerEnv: {}

service:
  type: NodePort 
  portName: gremlin
  servicePort: 8182
  targetPort: 8182
  # nodePort: use to fix the port chosen by the cluster controller
  serviceAnnotations:

secretKeyRefs:
  superuser: 
    name: demo-superuser
    namespace: k8ssandra-operator

# each property is converted from YAML to Java-style properties for JanusGraph
properties:
  storage.backend: cql
  storage.cql.keyspace: appspecific_janusgraph_keyspace
  storage.hostname: cluster-datacenter-service-hostname

# general indexing properties
indexingProperties:
  index.search.backend: lucene
  index.search.directory: /db/searchindex

# quirky elasticsearch details
elasticsearch:
  deploy: false
  rbac:
    create: true

## if using local storage and indexing, choose whether or not to persist janus status
persistence:
  enabled: true  
  path: /db
  accessMode: ReadWriteOnce
  size: 4Gi  
  existingClaim:

## To use your own janusgraph.properties and gremlin-server.yaml, provide a
## custom ConfigMap in your k8s cluster (use the helm-created ConfigMap as a pattern).
configMapOverrideName: ""
